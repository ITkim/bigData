---------------------------- pageMove ----------------------------
1. 이동 기술 종류
	1-1) html tag를 이용한 방식
		- 링크 tag : <a> [엥커태그]
		- form의 submit
		- 일반 button의 onclick
	
	1-2) servlet api를 이용한 방식
		⦁ forward 방식
			- 데이터 손실없음
			- 서로 다른 servlet이라 하더라도 하나의 servlet처럼 간주
			
		⦁ redirect 방식	
			- servlet간에 redirect가 발생시 무조건 새로운 요청으로 간주
		
2. 주요 API
	2-1) javax.servlet.http.HttpServlet
		⦁ 사용되는 메소드
			- public void doGet()
			- public void doPost()
			- public void service()
	
	2-2) javax.servlet.http.HttpServletRequest - 접속된 client만의 요청 정보 보유한 객체
		⦁ 사용되는 메소드	
			- String getParameter
				> web query string 구조로 전송되는 데이터값 획득
				> String으로만 반환
				
			- getRequestDispatcher()
			- public void setAttribute(String key, Object value)
				> 요청 객체에 데이터를 map 형태로 저장
				> map 형태로 데이터 저장
			- public Object getAtrribute(String key)
				> 요청 객체에 setAttribute()로 저장한 데이터만 반환	
				
	2-3) javax.servlet.http.HttpServletResponse
		⦁ 사용되는 메소드	
			- setContentType()
			- getWriter()
			- getRedirect()	
	
3. 실행 process
	3-1) 유효한 경우 : forward 방식
		pageReq.html -> LoginCheckController -> Success
		:http://localhost/step02_pageMove/cont
				-> 지정된 url이 유지 (보안상의 이유)
	
	3-2) 무효한 경우 : redirect 방식	
		pageReq.html -> LoginCheckController -> Fail
		:http://localhost/step02_pageMove/fail
				-> 최종 url로 바뀜


------------------------- SessionTracking -------------------------
1. Cookie 
	- clien pc에 상태유지값을 저장
	- 문자열만 저장 가능
	- getName()/getValue로 쿠키 정보 활용가능
	- 쿠키 개발 기술 : jacax.servlet.http, Cookie
  1-1) 개발단계
	- Cookie 객체를 저장할 문자열 데이터 수만큼 생성
	- client 시스템에 잔존시킬 시간 설정
	- client 시스템에 전송해서 쿠키 저장
	- servlet이동
	- client 시스템에 전송해서 쿠키 저장
	- 삭제
	
	
2. Session
	- server에 상태 유지값 저장
	- page이동 방식과 무관하게 서버 메모리의 데이터를 저장 및 활용 가능
	- 세션 개발 기술 : jacax.servlet.http	
  2-1) 개발단계	
	- HttpSession 객체를 하나씩만 생성 (client 수와 동일한 갯수의 객체를 생성)
	- server 메모리에 저장할 데이터 수만큼 세션에 데이터 저장을 함 (setAttribute())
	- servlet 이동
	- HttpSession으로부터 저장된 데이터 획득 (getAttribute())
	- 삭제 = 세션 무효화 (invalidate())